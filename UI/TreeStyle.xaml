<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UI">
    <Style x:Key="HorizontalTree" TargetType="TreeViewItem">
        <Style.Resources>
            <!-- <span class="code-comment"> Resources omitted for clarity... </span>-->
            
        </Style.Resources>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <Grid Margin="4,4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!--<span class="code-comment"> This Border contains elements which display 
               the content and child items of the TreeViewItem. </span>-->
                        <!--Background="{StaticResource ItemAreaBrush}"
            BorderBrush="{StaticResource ItemBorderBrush}"-->
                        <Border Name="Bd" 
             
            BorderThickness="0.0" 
            CornerRadius="0"              
            Padding="4"     
            SnapsToDevicePixels="True"
            >
                            <Grid>
                                <!--<span class="code-comment"> Items with children are shown in an Expander.</span> -->
                                
                                <Expander Name="Exp" 
                IsExpanded="{TemplateBinding TreeViewItem.IsExpanded}">
                                    <Expander.Header>
                                        <!--<span class="code-comment"> Displays the item's header in the Expander. </span>-->
                                        
                                        <ContentPresenter ContentSource="Header" />
                                    </Expander.Header>
                                    <!--<span class="code-comment"> Displays the item's children. </span>-->
                                    
                                    <ItemsPresenter />
                                </Expander>

                                <!--<span class="code-comment">Items without children are shown in a ContentPresenter.</span>-->
                                
                                <ContentPresenter Name="CntPres"
                ContentSource="Header"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Visibility="Collapsed" 
                />
                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--<span class="code-comment"> If the TreeViewItem has child items,
               show it in an Expander.  Otherwise
               hide the Expander and show the hidden
               ContentPresenter. </span>-->
                        
                        <Trigger Property="TreeViewItem.HasItems" Value="false">
                            <Setter 
              TargetName="Exp" 
              Property="Visibility" 
              Value="Collapsed" />
                            <Setter 
              TargetName="CntPres" 
              Property="Visibility" 
              Value="Visible" />
                        </Trigger>

                        <!--<span class="code-comment">When the item is selected in the TreeView, use the 
              "selected" colors and give it a drop shadow. </span>-->
                        
                        <Trigger Property="IsSelected" Value="true">
                            <!--<span class="code-comment"> Setters omitted for clarity... </span>-->
                            
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--<span class="code-comment"> Make each TreeViewItem show it's children 
       in a StackPanel. If it is a root item then
       the Orientation will be 'Horizontal', else
       'Vertical'.  
            Orientation="{Binding 
            RelativeSource={x:Static RelativeSource.TemplatedParent}, 
            Converter={StaticResource conv}}"
        </span>-->
       
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <ItemsPanelTemplate.Resources>
                        <local:ItemsPanelOrientationConverter x:Key="conv" />
                    </ItemsPanelTemplate.Resources>
                    <StackPanel 
          IsItemsHost="True" 
          Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        
   
    </Style>

</ResourceDictionary>